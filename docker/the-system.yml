version: '3'
services:
  linux:
    image: alpine
    networks:
      backend:


  redis:
    image: redis
    container_name: redis
    networks:
      backend:
        aliases:
          - "redis"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    volumes:
      - redis_data_volume:/data


  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    ports:
      - "9050:8001"
    networks:
      backend:
        aliases:
          - "redisinsight"
    volumes:
      - redisinsight_db_volume:/db
    depends_on:
      - redis

  config-server:
    image: localhost:5000/config-server
    container_name: config-server
    ports:
      - "9010:8080"
    networks:
      backend:
        aliases:
          - "config-server"
    healthcheck:
      test: "wget --no-cache --spider http://localhost:8080/actuator/health || exit 1"
      interval: 5s
      timeout: 10s
#      start_period: 10s
      retries: 10

  dummy-service:
    image: localhost:5000/dummy-spring-boot-app
    container_name: dummy-service
    environment:
      SPRING_APPLICATION_NAME: dummy-service
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8080
      SPRING_CLOUD_CONFIG_RETRY_MAX-ATTEMPTS: 20
    depends_on:
      - config-server
    ports:
      - "9999:8080"
    networks:
      backend:
        aliases:
          - "dummy-service"
    healthcheck:
      test: "wget --no-cache --spider http://localhost:8080/actuator/health || exit 1"
      interval: 5s
      timeout: 10s
#      start_period: 10s
      retries: 10


  user-service:
    image: localhost:5000/user-spring-boot-app
    container_name: user-service
    depends_on:
      - config-server
    ports:
      - "9020:8080"
    networks:
      backend:
        aliases:
          - "user-service"
    healthcheck:
      test: "wget --no-cache --spider http://localhost:8080/actuator/health || exit 1"
      interval: 5s
      timeout: 10s
#      start_period: 10s
      retries: 10

volumes:
  redis_data_volume:
  redisinsight_db_volume:

networks:
  backend:
    driver: bridge
