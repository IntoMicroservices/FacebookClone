<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>klon</groupId>
    <artifactId>klon</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>user-repo-api</module>
        <module>user-repo-inmem</module>
        <module>user-repo-redis</module>
        <module>user-service-api</module>
        <module>user-service-impl</module>
        <module>user-service-spring-boot-starter</module>
        <module>spring-boot-parent</module>
        <module>user-service-rest-spring-api</module>
        <module>user-spring-boot-app</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <apache.lang3.version>3.12.0</apache.lang3.version>
        <!-- JaCoCo for sonarcloud Properties -->
        <jacoco.version>0.8.7</jacoco.version>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.language>java</sonar.language>
        <!-- end of jacoco props -->
        <image.path>docker.io/intomicroservices/${project.artifactId}</image.path>
        <jib.version>2.5.0</jib.version>
        <embedded-redis.version>0.7.3</embedded-redis.version>
        <junit.version>5.7.2</junit.version>
        <lombok.version>1.18.20</lombok.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.release>11</maven.compiler.release>
        <mockito.version>3.11.2</mockito.version>
        <redisson.version>3.16.1</redisson.version>
        <spring.boot.version>2.5.3</spring.boot.version>
        <sonar.organization>intomicroservices</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <vavr.version>0.10.4</vavr.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>klon</groupId>
                <artifactId>user-repo-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>klon</groupId>
                <artifactId>user-repo-inmem</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>klon</groupId>
                <artifactId>user-repo-redis</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>klon</groupId>
                <artifactId>user-service-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>klon</groupId>
                <artifactId>user-service-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>klon</groupId>
                <artifactId>user-service-rest-spring-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>klon</groupId>
                <artifactId>user-service-spring-boot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>


            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vavr</groupId>
                <artifactId>vavr</artifactId>
                <version>${vavr.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>it.ozimov</groupId>
                <artifactId>embedded-redis</artifactId>
                <version>${embedded-redis.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>


            <dependency>
                <!-- Dependency definitions above override what's specified in the pom imported here -->
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.1.0</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>